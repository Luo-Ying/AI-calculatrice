package test;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.file.FileSystems;

import exceptions.AiExceptionForward;
import losses.ILoss;
import losses.LossDifference;
import models.MLP;
import transfertFunctions.ITransfertFunction;
import transfertFunctions.TransfertFunctionSigmoid;
import utils.IInitialiseBias;
import utils.IInitialiseWeights;
import utils.InitialiseBiasNormal;
import utils.InitialiseWeightsNormal;

public class Test {
	
	public static void main(String[] args) {
		
		
//		version 1.0  {0.0,10.0},{1.0,1.0},{1.0,6.0},{2.0,4.0},{2.0,7.0},{8.0,8.0},{8.0,9.0},{8.0,10.0},{9.0,9.0},{9.0,10.0},{10.0,10.0},	
//		File fichier =  new File("./src/tmp/mlp.ser") ;			
		
//		version 2.0 {0.0,10.0},{1.0,1.0},{1.0,6.0},{2.0,4.0},{2.0,7.0},{7,10},{8.0,8.0},{8.0,9.0},{8.0,10.0},{9.0,9.0},{9.0,10.0},{10.0,10.0},
		File fichier =  new File("./src/tmp/mlp_v2.ser") ;
		
//		Test.train();		// entrainer
		
		try {
			// ouverture d'un flux sur un fichier
			ObjectInputStream ois =  new ObjectInputStream(new FileInputStream(fichier)) ;
			
			// d¨¦s¨¦rialization de l'objet
			MLP mlp2 = (MLP)ois.readObject() ;
			
			
			double[] in2= new double[] {7.0,10.0};
			try {
				
				double[] pred2 = mlp2.forward(in2);
				
				for (double d : pred2) {
					System.out.print(d + ",");
				}
				System.out.println();
				System.out.println(mlp2.getMaxIndice(pred2));
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		
	}
	
		
	public static void train() {
		int nbLayers = 2;
		int inputSize = 2;
		int outputSize = 21;
		double lr = 0.39;
		IInitialiseWeights initWeights = new InitialiseWeightsNormal();
		IInitialiseBias initBias = new InitialiseBiasNormal();
		ITransfertFunction tf = new TransfertFunctionSigmoid();
		ILoss lf = new LossDifference();
		MLP mlp = new MLP( nbLayers, inputSize, outputSize, lr, initWeights, initBias, tf, lf);
		
		
//		double[] in1= new double[] {2.0,3.0};
//		try {
//			double[] out1 = mlp.forward(in1);
//		} catch (AiExceptionForward e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
		
		
		double[][] trainIn = new double[][] {
			
//			{0.0,0.0},
//			{0.0,1.0},
//			{0.0,2.0},
//			{0.0,3.0},
//			{0.0,4.0},
//			{0.0,5.0},
//			{0.0,6.0},
//			{0.0,7.0},
//			{0.0,8.0},
//			{0.0,9.0},
			{0.0,10.0},
//			
			{1.0,1.0},
//			{1.0,2.0},
//			{1.0,3.0},
//			{1.0,4.0},
//			{1.0,5.0},
			{1.0,6.0},
//			{1.0,7.0},
//			{1.0,8.0},
//			{1.0,9.0},
//			{1.0,10.0},
//			
//			{2.0,2.0},
//			{2.0,3.0},
			{2.0,4.0},
//			{2.0,5.0},
//			{2.0,6.0},
			{2.0,7.0},
//			{2.0,8.0},
//			{2.0,9.0},
//			{2.0,10.0},
//			
//			{3.0,3.0},
//			{3.0,4.0},
//			{3.0,5.0},
//			{3.0,6.0},
//			{3.0,7.0},
//			{3.0,8.0},
//			{3.0,9.0},
//			{3.0,10.0},
			
//			{4.0,4.0},
//			{4.0,5.0},
//			{4.0,6.0},
//			{4.0,7.0},
//			{4.0,8.0},
//			{4.0,9.0},
//			{4.0,10.0},
//			
//			{5.0,5.0},
//			{5.0,6.0},
//			{5.0,7.0},
//			{5.0,8.0},
//			{5.0,9.0},
//			{5.0,10.0},
//			
//			{6.0,6.0},
//			{6.0,7.0},
//			{6.0,8.0},
//			{6.0,9.0},
//			{6.0,10.0},
//			
//			{7.0,7.0},
//			{7.0,8.0},
			{7.0,9.0},
			{7.0,10.0},
//			
			{8.0,8.0},
			{8.0,9.0},
			{8.0,10.0},
//			
			{9.0,9.0},
			{9.0,10.0},
//			
			{10.0,10.0},
		};
		
		double[][] trainOut = new double[][] {
			
			// 0
//			{1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			// 1
			{.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			// 2
//			{.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			// 3
//			{.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0},
//			// 4
//			{.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0},
//			// 5
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0},
//			// 6
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0},
//			// 7
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0,.0},
//			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0},
//			// 8
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0},
//			// 9
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0,.0},
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0,.0},
//			// 10
			{.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,.0,1.0},
			
		};
		
		File fichier =  new File("./src/tmp/mlp.ser") ;
		
		int epochs = 0;
		double totalLoss = 0;
		while (epochs<1000000) {
			
			for(int i=0;i< trainIn.length;i++) {
				totalLoss = mlp.learn(trainIn[i], trainOut[i]);
			}
			
			epochs++;
			if (epochs%10000==0) {
				System.out.println("loss: "+totalLoss);
				System.out.println(epochs/100000*100);
			}
		}
		
		
		
		// ouverture d'un flux sur un fichier
		try {
			ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fichier));
			oos.writeObject(mlp) ;
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
